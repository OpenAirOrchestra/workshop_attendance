{"version":3,"sources":["Configuration.js","AttendanceService.js","EventService.js","UserService.js","Header.js","SearchBar.js","AttendanceRecord.js","AttendanceList.js","NewAttendeeForm.js","Loading.js","AttendanceSheet.js","index.js"],"names":["Configuration","attendanceService","eventService","userService","AttendanceService","page","per_page","event_id","a","searchParams","URLSearchParams","set","url","this","serviceLocation","toString","fetch","response","ok","text","alert","status","statusText","error","json","id","attendanceRecord","method","mode","headers","body","JSON","stringify","Promise","resolve","EventService","date","offset","getTimezoneOffset","localDate","Date","getTime","dateString","toISOString","substring","event","UserService","Header","props","name","element","href","className","SearchBar","searchTerm","setSearchTerm","filterRecent","setFilterRecent","filterOld","setFilterOld","filterNew","setFilterNew","filterPresent","setFilterPresent","type","placeholder","value","onChange","target","checked","htmlFor","AttendanceRecord","attendee","pendingMap","addAttendanceRecord","deleteAttendanceRecord","key","attendeeKey","pending","present","notes","phone","email","attendanceIcon","attendanceClassName","pendingClassName","attendeeDetails","pendingSpinner","lastname","user_id","charAt","onClick","firstname","AttendanceList","attendees","rows","sort","b","aFirstname","toLowerCase","bFirstname","aLastname","bLastname","map","NewAttendeeForm","hideAttendeeForm","useState","setFirstname","setLastname","setEmail","setPhone","setNotes","action","disabled","attAttendanceRecord","handleAdd","Loading","isLoading","AttendanceSheet","eventId","setEventId","setIsLoading","eventRecord","setEventRecord","users","setUsers","recents","setRecents","recentUserKeys","setRecentUserKeys","currentAttendees","setCurrentAttendees","setPending","modificationPromise","setModificationPromise","pendingAttendee","useEffect","configureServices","loadEventId","loadAll","searchedAttendees","pattern","replace","result","filter","Object","values","String","join","includes","searchAttendees","attendanceMap","user","nickname","first_name","last_name","description","recent","currentAttendee","possibleAttendees","filteredAttendees","isRecent","has","filterAttendees","showNewAttendeeForm","workshopURL","title","get","allUsers","moreUsers","retrieve","length","Set","add","allAttendees","moreAttendees","newPending","push","pendingRecords","newAttendee","undefined","create","recordId","delete","paramString","window","location","search","urlParams","events","locale","navigator","languages","titleString","toLocaleDateString","weekday","day","month","year","createdEvent","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c081ab7.chunk.js","sourcesContent":[" let Configuration = {\n\n    attendanceService : null,\n    eventService : null,\n    userService: null,\n   \n}\n\nexport default Configuration;\n","/// Restful web service for getting attendance records.\n/// See:  https://dzone.com/articles/consuming-rest-api-with-reactjs\nclass AttendanceService {\n\n    /// Get rest api location\n    serviceLocation() {\n        return \"../../../../?rest_route=/workshop_attendance/v1/attendees\";\n    }\n\n    async retrieve(page, per_page, event_id) {\n        const searchParams = new URLSearchParams({\n            page: page,\n            per_page: per_page\n        });\n        if (event_id) {\n            searchParams.set('search', event_id);\n        }\n        const url = this.serviceLocation() + \"&\" + searchParams.toString();\n\n        const response = await fetch(url);\n\n        if (!response.ok) {\n            const text = await response.text();\n            alert(\"Failed to get attendees Response: \" + response.status + \" \" + response.statusText + \"\\n\" + text);\n\n            return response.error();\n        }\n\n        return response.json();\n    }\n\n    /// Get request (get an event)\n    async get(id) {\n        const url = this.serviceLocation() + \"/\" + id;\n        const response = await fetch(url);\n\n        if (!response.ok) {\n            const text = await response.text();\n            alert(\"Failed to get attendee \" + id + \", Response: \" + response.status + \" \" + response.statusText + \"\\n\" + text);\n\n            return response.error();\n        }\n\n        return response.json();\n    }\n\n    async create(attendanceRecord) {\n        const url = this.serviceLocation();\n\n        const response = await fetch(url, {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(attendanceRecord)\n        });\n\n        if (!response.ok) {\n            const text = await response.text();\n            alert(\"Failed to create attendance record, Response: \" + response.status + \" \" + response.statusText + \"\\n\" + text);\n\n            return response.error();\n        }\n\n        return response.json();\n    }\n\n    async delete(id) {\n        const url = this.serviceLocation() + \"/\" + id;\n\n        const response = await fetch(url, {\n            method: \"DELETE\",\n            mode: \"cors\"\n        })\n\n        if (!response.ok) {\n            const text = await response.text();\n            alert(\"Failed to create attendance record, Response: \" + response.status + \" \" + response.statusText + \"\\n\" + text);\n\n            return response.error();\n        }\n\n        return Promise.resolve(response);\n    }\n}\n\nexport default AttendanceService;\n","/// Restful web service for getting attendance records.\n/// See:  https://dzone.com/articles/consuming-rest-api-with-reactjs\n/// See:  https://developer.wordpress.org/rest-api/\nclass EventService {\n\n    /// Get rest api location\n    serviceLocation() {\n        return \"../../../../?rest_route=/workshop_attendance/v1/events\";\n    }\n\n    async retrieve(page, per_page, date) {\n\n        const searchParams = new URLSearchParams({\n            page: page,\n            per_page: per_page\n        });\n        if (date) {\n            // YYYY-MM-DD, local time please.\n            const offset = date.getTimezoneOffset();\n            const localDate = new Date(date.getTime() - (offset * 60 * 1000));\n            const dateString = localDate.toISOString().substring(0, 10);\n\n            searchParams.set('search', dateString);\n        }\n        const url = this.serviceLocation() + \"&\" + searchParams.toString();\n\n        const response = await fetch(url);\n\n        if (!response.ok) {\n            const text = await response.text();\n            alert(\"Failed to get workshops Response: \" + response.status + \" \" + response.statusText + \"\\n\" + text);\n\n            return response.error();\n        }\n\n        return response.json();\n    }\n\n    /// Get request (get an event)\n    async get(id) {\n        const url = this.serviceLocation() + \"/\" + id;\n        const response = await fetch(url);\n\n        if (!response.ok) {\n            const text = await response.text();\n            alert(\"Failed to get workshop \" + id + \", Response: \" + response.status + \" \" + response.statusText + \"\\n\" + text);\n\n            return response.error();\n        }\n\n        return response.json();\n    }\n\n    // Create event (post)\n    async create(event) {\n        const url = this.serviceLocation();\n\n        const response = await fetch(url, {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(event)\n        });\n\n        if (!response.ok) {\n            const text = await response.text();\n            alert(\"Failed to create workshop, Response: \" + response.status + \" \" + response.statusText + \"\\n\" + text);\n\n            return response.error();\n        }\n\n        return response.json();\n    }\n}\n\nexport default EventService;\n","/// webservice for getting users from wordpress.\n/// See: https://dzone.com/articles/consuming-rest-api-with-reactjs\n/// See: https://developer.wordpress.org/rest-api/reference/users/\n\nclass UserService {\n\n    /// Get rest api location\n    serviceLocation() {\n        return \"../../../../?rest_route=/wp/v2/users\";\n    }\n\n    /// Retrieve users.\n    /// page and per_page are needed because of the limits on the wordpress json api.\n    async retrieve(page, per_page) {\n\n        const searchParams = new URLSearchParams( {\n            page: page,\n            per_page: per_page\n        });\n        const url = this.serviceLocation() + \"&\" + searchParams.toString();\n        const response = await fetch(url);\n\n        if (!response.ok) {\n            const text = await response.text();\n            alert( \"Failed to list users, Response: \" + response.status + \" \" + response.statusText + \"\\n\" + text);\n\n            return response.error();\n        }\n        \n        return response.json();\n    }\n}\n\nexport default UserService;\n","import React from 'react';\n\nexport default Header\n\nfunction Header(props) {\n  const name = props.name;\n  const url = props.url;\n\n  let element =  <h1>Loading...</h1>;\n\n  if (name) {\n    element = <h1>>Attendance for {name}</h1>;\n  }\n  if (url && name) {\n    element =  <h1>Attendance for <a href={url}>{name}</a></h1>;\n  } \n  \n  return (\n    <div className='Header'>\n      {element}\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default SearchBar\n\nfunction SearchBar(props) {\n  const searchTerm = props.searchTerm;\n  const setSearchTerm = props.setSearchTerm;\n\n  const filterRecent = props.filterRecent;\n  const setFilterRecent = props.setFilterRecent;\n  const filterOld = props.filterOld;\n  const setFilterOld = props.setFilterOld;\n  const filterNew = props.filterNew;\n  const setFilterNew = props.setFilterNew;\n  const filterPresent = props.filterPresent;\n  const setFilterPresent = props.setFilterPresent;\n\n  return (\n    <div className='SearchBar'>\n      <form>\n        <input type=\"text\" name=\"search\" placeholder=\"&#128269;\" value={searchTerm}\n          onChange={(event) => setSearchTerm(event.target.value)} />\n        <br />\n        <input type=\"checkbox\" name=\"recent\" id=\"recent\" checked={!!filterRecent}\n          onChange={(event) => setFilterRecent(event.target.checked)} />\n        <label htmlFor=\"recent\">recent</label>\n        <input type=\"checkbox\" name=\"old\" id=\"old\" checked={!!filterOld}\n          onChange={(event) => setFilterOld(event.target.checked)} />\n        <label htmlFor=\"old\">rusty</label>\n        <input type=\"checkbox\" name=\"new\" id=\"new\" checked={!!filterNew}\n          onChange={(event) => setFilterNew(event.target.checked)} />\n        <label htmlFor=\"new\">new folks</label>\n        <input type=\"checkbox\" name=\"attendees\" id=\"attendees\" checked={!!filterPresent}\n          onChange={(event) => setFilterPresent(event.target.checked)} />\n        <label htmlFor=\"attendees\">attendees</label>\n      </form>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default AttendanceRecord\n\nexport function attendeeKey(attendee) {\n  let key = attendee.user_id;\n\n  if (!key || key === '0') {\n    key = (attendee.firstname + '.' + attendee.lastname);\n  }\n  return key;\n}\n\nfunction AttendanceRecord(props) {\n  const attendee = props.attendee;\n  const pendingMap = props.pendingMap ? props.pendingMap : {};\n  const event_id = props.event_id;\n  const addAttendanceRecord = props.addAttendanceRecord;\n  const deleteAttendanceRecord = props.deleteAttendanceRecord;\n\n  const key = attendeeKey(attendee);\n\n  const pending = pendingMap[key];\n  const present = attendee.event_id && (attendee.event_id === event_id);\n\n  const notes = attendee.notes ? <div> {attendee.notes} </div> : '';\n  const phone = attendee.phone ? <span> {attendee.phone} </span> : '';\n  const email = attendee.email ? <span> {attendee.email} </span> : '';\n\n  const attendanceIcon = present ? '\\u2714' : '\\u274c';\n  const attendanceClassName = present ? 'present' : 'absent';\n  const pendingClassName = pending ? 'pending' : '';\n  const attendeeDetails = <div>\n    {notes}\n    {email}\n    {phone}\n  </div>;\n\n  const pendingSpinner = pending ? (<span className=\"pending-spinner\" />) : '';\n\n  // For not new users, don't show full last name\n  const lastname = (attendee.user_id && attendee.lastname) ? attendee.lastname.charAt(0) : attendee.lastname;\n  return (\n    <tr className={'AttendanceRecord  ' + attendanceClassName + ' ' + pendingClassName}\n      onClick={() => {\n        if (present && !pending) {\n          deleteAttendanceRecord(attendee);\n        } else if (!pending) {\n          addAttendanceRecord(attendee);\n        }\n      }} >\n      <td className='attendee' >\n        {attendee.firstname + ' ' + lastname}\n        <div className=\"details\">\n          {attendeeDetails}\n        </div>\n      </td>\n      <td className='presence' >{pendingSpinner}<span className='presenceIcon'>{attendanceIcon}</span></td>\n    </tr>\n  )\n}\n","import React from 'react';\n\nimport AttendanceRecord, { attendeeKey } from './AttendanceRecord.js'\n\nexport default AttendanceList\n\nfunction AttendanceList(props) {\n  const attendees = props.attendees;\n  const pendingMap = props.pendingMap ? props.pendingMap : {}\n  const event_id = props.event_id;\n\n  const addAttendanceRecord = props.addAttendanceRecord;\n  const deleteAttendanceRecord = props.deleteAttendanceRecord;\n\n  const rows = attendees\n    .sort((a, b) => {\n      let aFirstname = a.firstname.toLowerCase();\n      let bFirstname = b.firstname.toLowerCase();\n\n      if (aFirstname.toLowerCase() > bFirstname.toLowerCase()) {\n        return 1;\n      }\n\n      if (aFirstname.toLowerCase() < bFirstname.toLowerCase()) {\n        return -1;\n      }\n\n      let aLastname = a.lastname ? a.lastname.toLowerCase() : '';\n      let bLastname = b.lastname ? b.lastname.toLowerCase() : '';\n\n      if (aLastname.toLowerCase() > bLastname.toLowerCase()) {\n        return 1;\n      }\n\n      if (aLastname.toLowerCase() < bLastname.toLowerCase()) {\n        return -1;\n      }\n\n      return 0;\n    })\n    .map((attendee) =>\n      <AttendanceRecord attendee={attendee} event_id={event_id} pendingMap={pendingMap} key={attendeeKey(attendee)}\n        addAttendanceRecord={addAttendanceRecord}\n        deleteAttendanceRecord={deleteAttendanceRecord} />\n    );\n  return (\n    <div className='AttendanceList'>\n      <table>\n        <tbody>\n          {rows}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import React, { useState } from 'react';\n\nexport default NewAttendeeForm\n\n/// Handle clicking on the add button\nfunction handleAdd(addAttendanceRecord, firstname, setFirstname, lastname, setLastname, email, setEmail, phone, setPhone, notes, setNotes, attAttendanceRecord) {\n  // Create record\n  const attendee = { firstname: firstname, lastname: lastname, email: email, phone: phone, notes: notes };\n\n  // Add the record\n  addAttendanceRecord(attendee);\n\n  // Clear the form.\n  setFirstname('');\n  setLastname('');\n  setEmail('');\n  setPhone('');\n  setNotes('');\n}\n\nfunction NewAttendeeForm(props) {\n\n  const hideAttendeeForm = props.hideAttendeeForm;\n  const addAttendanceRecord = props.addAttendanceRecord;\n\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [notes, setNotes] = useState('');\n\n  if (hideAttendeeForm) {\n    return null;\n  }\n\n  return (\n    <div className='NewAttendeeForm'>\n      <h2>Add New Attendee</h2>\n      <form action=\"\">\n        <label htmlFor=\"firstname\">First Name (required):</label>\n        <input type=\"text\" name=\"firstname\" id=\"firstname\" className='required' value={firstname} onChange={(event) => setFirstname(event.target.value)} />\n        <br />\n        <label htmlFor=\"lastname\">Last Name (required): </label>\n        <input type=\"text\" name=\"lastname\" id=\"lastname\" className='required' value={lastname} onChange={(event) => setLastname(event.target.value)} />\n        <br />\n        <label htmlFor=\"email\">Email:</label>\n        <input type=\"text\" name=\"email\" id=\"email\" value={email} onChange={(event) => setEmail(event.target.value)} />\n        <br />\n        <label htmlFor=\"phone\">Phone:</label>\n        <input type=\"text\" name=\"phone\" id=\"phone\" value={phone} onChange={(event) => setPhone(event.target.value)} />\n        <br />\n        <label htmlFor=\"notes\">Notes:</label>\n        <br />\n        <textarea name=\"notes\" id=\"notes\" value={notes} onChange={(event) => setNotes(event.target.value)} />\n        <br />\n        <div className='centered'>\n          <input type=\"submit\" value=\"Add\" disabled={!(firstname && lastname)}\n            onClick={() => {\n              handleAdd(addAttendanceRecord, firstname, setFirstname, lastname, setLastname, email, setEmail, phone, setPhone, notes, setNotes);\n            }} />\n        </div>\n      </form>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default Loading\n\nfunction Loading(props) {\n    const isLoading = props.isLoading;\n\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className='Loading'>\n            <div className='inner'>\n                <div className='spinner'></div>\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport Configuration from './Configuration';\nimport MockAttendanceService from './MockAttendanceService';\nimport MockEventService from './MockEventService';\nimport MockUserService from './MockUserService';\nimport AttendanceService from './AttendanceService';\nimport EventService from './EventService';\nimport UserService from './UserService';\n\nimport Header from './Header'\nimport SearchBar from './SearchBar'\nimport AttendanceList from './AttendanceList'\nimport { attendeeKey } from './AttendanceRecord';\nimport NewAttendeeForm from './NewAttendeeForm'\nimport Loading from './Loading'\n\nexport default AttendanceSheet\n\n/// Compute attendees from users and attendance records\nfunction possibleAttendees(eventId, users, recents, currentAttendees, pending) {\n\tlet attendanceMap = {}\n\n\t// Add users to the map.\n\tfor (const user of users) {\n\t\tlet attendanceRecord = { user_id: user.id, firstname: '', lastname: '' };\n\t\tif (user.nickname) {\n\t\t\tattendanceRecord.firstname = user.nickname;\n\t\t} else if (user.first_name) {\n\t\t\tattendanceRecord.firstname = user.first_name;\n\t\t\tif (user.last_name) {\n\t\t\t\tattendanceRecord.lastname = user.last_name;\n\t\t\t}\n\t\t} else if (user.name) {\n\t\t\tattendanceRecord.firstname = user.name;\n\t\t}\n\n\t\tif (user.description) {\n\t\t\tattendanceRecord.notes = user.description;\n\t\t}\n\n\t\tattendanceMap[user.id] = attendanceRecord;\n\t}\n\n\t// Add recents to the map\n\tfor (const recent of recents) {\n\t\tif (recent.event_id === eventId) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst key = attendeeKey(recent);\n\t\tlet attendanceRecord = attendanceMap[key];\n\t\tif (!attendanceRecord) {\n\t\t\tattendanceRecord = { ...recent };\n\t\t} else {\n\t\t\tattendanceRecord = { ...attendanceRecord };\n\t\t}\n\n\t\tattendanceRecord.id = recent.id;\n\n\t\tif (!attendanceRecord.notes) {\n\t\t\tattendanceRecord.notes = recent.notes;\n\t\t}\n\t\tattendanceRecord.event_id = recent.event_id;\n\t\tattendanceMap[key] = attendanceRecord;\n\t}\n\n\t// Add currentAttendees to the map\n\tfor (const currentAttendee of currentAttendees) {\n\t\tconst key = attendeeKey(currentAttendee);\n\t\tlet attendanceRecord = attendanceMap[key];\n\t\tif (!attendanceRecord) {\n\t\t\tattendanceRecord = { ...currentAttendee };\n\t\t} else {\n\t\t\tattendanceRecord = { ...attendanceRecord };\n\t\t}\n\n\t\tattendanceRecord.id = currentAttendee.id;\n\t\tattendanceRecord.event_id = currentAttendee.event_id;\n\t\tif (currentAttendee.phone && !attendanceRecord.phone) {\n\t\t\tattendanceRecord.phone = currentAttendee.phone;\n\t\t}\n\t\tif (currentAttendee.user_id && !attendanceRecord.user_id) {\n\t\t\tattendanceRecord.user_id = currentAttendee.user_id;\n\t\t}\n\t\tif (currentAttendee.user_id && !attendanceRecord.user_id) {\n\t\t\tattendanceRecord.user_id = currentAttendee.user_id;\n\t\t}\n\t\tif (currentAttendee.firstname && !attendanceRecord.firstname) {\n\t\t\tattendanceRecord.firstname = currentAttendee.firstname;\n\t\t}\n\t\tif (currentAttendee.lastname && !attendanceRecord.lastname) {\n\t\t\tattendanceRecord.lastname = currentAttendee.lastname;\n\t\t}\n\t\tif (currentAttendee.notes && !attendanceRecord.notes) {\n\t\t\tattendanceRecord.notes = currentAttendee.notes;\n\t\t}\n\n\t\tattendanceMap[key] = attendanceRecord;\n\t}\n\n\t// Add pending to the map\n\tfor (const pendingAttendee of pending) {\n\t\tconst key = attendeeKey(pendingAttendee);\n\t\tlet attendanceRecord = attendanceMap[key];\n\t\tif (!attendanceRecord) {\n\t\t\tattendanceRecord = { ...pendingAttendee };\n\t\t} else {\n\t\t\tattendanceRecord = { ...attendanceRecord };\n\t\t}\n\n\t\tattendanceMap[key] = attendanceRecord;\n\t}\n\n\t// Iterate the map to create result.\n\tconst attendees = Object.values(attendanceMap);\n\treturn attendees ? attendees : [];\n}\n\n/// Return the subset of attendees with text that matches searchTerm\nfunction searchAttendees(attendees, searchTerm) {\n\tconst pattern = searchTerm ? searchTerm.toLowerCase().replace(/\\s+/g, '') : null;\n\tlet result = attendees;\n\n\tif (pattern) {\n\t\tresult = result.filter(attendee => {\n\t\t\tconst line = Object.values(attendee).map(value => {\n\t\t\t\treturn String(value).toLowerCase()\n\t\t\t}).join().replace(/\\s+/g, '');\n\t\t\treturn line.includes(pattern);\n\t\t})\n\t}\n\n\treturn result;\n}\n\n/// Return the subset of attendees that match the filter criteria\nfunction filterAttendees(eventId, attendees, recentUserKeys, filterRecent, filterOld, filterNew, filterPresent) {\n\tlet result = attendees;\n\n\tif (filterRecent || filterNew || filterOld || filterPresent) {\n\t\tresult = result.filter(attendee => {\n\n\t\t\tif (filterNew && (!attendee.user_id || attendee.user_id === '0')) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (filterPresent && attendee.event_id && attendee.event_id === eventId) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (filterRecent || filterOld) {\n\t\t\t\tconst key = attendeeKey(attendee);\n\t\t\t\tconst isRecent = recentUserKeys.has(key);\n\n\t\t\t\tif (filterRecent && isRecent) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif (filterOld && !isRecent) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\treturn result;\n}\n\n/// Load all data from backend.\nasync function loadAll(eventId, setIsLoading, setEventRecord, setUsers, setRecents, setRecentUserKeys, setCurrentAttendees) {\n\tconst eventService = Configuration.eventService;\n\tconst userService = Configuration.userService;\n\tconst attendanceService = Configuration.attendanceService;\n\n\tconst eventRecord = await eventService.get(eventId);\n\tsetEventRecord(eventRecord);\n\n\tlet page = 1;\n\tlet allUsers = [];\n\tlet moreUsers = true;\n\tdo {\n\t\tconst users = await userService.retrieve(page, 100);\n\t\tallUsers = [...allUsers, ...users];\n\t\tsetUsers(allUsers);\n\t\tmoreUsers = users.length > 0;\n\t\t++page;\n\t} while (moreUsers);\n\n\tconst recents = await attendanceService.retrieve(1, 50);\n\tsetRecents(recents);\n\n\tlet recentUserKeys = new Set();\n\tfor (const recent of recents) {\n\t\tconst key = attendeeKey(recent);\n\t\trecentUserKeys.add(key);\n\t}\n\tsetRecentUserKeys(recentUserKeys);\n\n\tpage = 1;\n\tlet allAttendees = [];\n\tlet moreAttendees = true;\n\tdo {\n\t\tconst currentAttendees = await attendanceService.retrieve(page, 100, eventId);\n\t\tallAttendees = [...allAttendees, ...currentAttendees];\n\t\tsetCurrentAttendees(allAttendees);\n\t\tmoreAttendees = currentAttendees.length > 0;\n\t\t++page;\n\t} while (moreAttendees);\n\n\t\n\tsetIsLoading(false);\n}\n\n/// Add an attendance record (add attendee)\nasync function addAttendanceRecord(eventId, attendee, modificationPromise, pending, setPending, setCurrentAttendees) {\n\tconst attendanceService = Configuration.attendanceService;\n\n\t// Add record to pending\n\tlet newPending = [...pending];\n\tnewPending.push(attendee);\n\tsetPending(newPending);\n\tattendanceService.pendingRecords = newPending;\n\n\t// Create the record to add\n\tlet newAttendee = { ...attendee };\n\tnewAttendee.event_id = eventId;\n\tnewAttendee.id = undefined;\n\n\t// Ask for the server to create the attendee record\n\tawait attendanceService.create(newAttendee);\n\n\t// Wait for previous modification to complete\n\tawait modificationPromise\n\n\t// List current attendees again and set them\n\tlet page = 1;\n\tlet allAttendees = [];\n\tlet moreAttendees = true;\n\tdo {\n\t\tconst currentAttendees = await attendanceService.retrieve(page, 100, eventId);\n\t\tallAttendees = [...allAttendees, ...currentAttendees];\n\t\tsetCurrentAttendees(allAttendees);\n\t\tmoreAttendees = currentAttendees.length > 0;\n\t\t++page;\n\t} while (moreAttendees);\n\n\t// Remove record from pending.\n\t// This could get messed up if we didn't serilize the modification requests.\n\tnewPending = [...attendanceService.pendingRecords].filter(pendingAttendee => {\n\t\treturn pendingAttendee !== attendee;\n\t});\n\tsetPending(newPending);\n\tattendanceService.pendingRecords = newPending;\n\tPromise.resolve(attendee);\n}\n\n/// Add an attendance record (add attendee)\nasync function deleteAttendanceRecord(eventId, attendee, modificationPromise, pending, setPending, setRecents, setCurrentAttendees) {\n\tconst attendanceService = Configuration.attendanceService;\n\n\t// Add record to pending\n\tlet newPending = [...pending];\n\tnewPending.push(attendee);\n\tsetPending(newPending);\n\tattendanceService.pendingRecords = newPending;\n\n\t// Get the id\n\tconst recordId = attendee.id;\n\n\t// Delete the attendance record\n\tawait attendanceService.delete(recordId);\n\n\t// Wait for previous modification to complete\n\tawait modificationPromise\n\n\t// List recent attendees again and set them\n\tconst recents = await attendanceService.retrieve(1, 50);\n\tsetRecents(recents);\n\n\t// List current attendees again and set them\n\tlet page = 1;\n\tlet allAttendees = [];\n\tlet moreAttendees = true;\n\tdo {\n\t\tconst currentAttendees = await attendanceService.retrieve(page, 100, eventId);\n\t\tallAttendees = [...allAttendees, ...currentAttendees];\n\t\tsetCurrentAttendees(allAttendees);\n\t\tmoreAttendees = currentAttendees.length > 0;\n\t\t++page;\n\t} while (moreAttendees);\n\n\t// Remove record from pending.\n\t// This could get messed up if we didn't serilize the modification requests.\n\tnewPending = [...attendanceService.pendingRecords].filter(pendingAttendee => {\n\t\treturn pendingAttendee !== attendee;\n\t});\n\tsetPending(newPending);\n\tattendanceService.pendingRecords = newPending;\n\tPromise.resolve(attendee);\n}\n\nfunction configureServices() {\n\tif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n\t\t// Development code\n\t\tif (!Configuration.userService) {\n\t\t\tConfiguration.eventService = new MockEventService();\n\t\t\tConfiguration.userService = new MockUserService();\n\t\t\tConfiguration.attendanceService = new MockAttendanceService();\n\t\t}\n\t} else {\n\t\t// production code\n\t\tif (!Configuration.userService) {\n\t\t\tConfiguration.eventService = new EventService();\n\t\t\tConfiguration.userService = new UserService();\n\t\t\tConfiguration.attendanceService = new AttendanceService();\n\t\t}\n\t}\n}\n\nasync function loadEventId(setEventId) {\n\tlet eventId = null;\n\n\tif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n\t\t// dummy event Id\n\t\teventId = 1000;\n\t}\n\n\t// get id from url param \"event_id\"\n\tif (!eventId) {\n\t\tconst paramString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(paramString);\n\t\teventId = urlParams.get('event_id');\n\t}\n\n\t// No event id? try getting today's event.\n\tif (!eventId) {\n\t\tconfigureServices();\n\t\tconst eventService = Configuration.eventService;\n\n\t\t// try to find today's event\n\t\tconst events = await eventService.retrieve(1 /* page */, 100 /* limit */, new Date());\n\n\t\tif (events.length === 1) {\n\t\t\teventId = events[0].id;\n\t\t}\n\t}\n\n\t// Still no event id?  Create a new event\n\tif (!eventId) {\n\t\tconfigureServices();\n\t\tconst eventService = Configuration.eventService;\n\n\t\tconst date = new Date();\n\t\t// YYYY-MM-DD, local time please.\n\t\tconst offset = date.getTimezoneOffset();\n\t\tconst localDate = new Date(date.getTime() - (offset * 60 * 1000));\n\t\tconst dateString = localDate.toISOString().substring(0, 10);\n\n\t\tconst locale = navigator.languages[0];\n\t\tconst titleString = localDate.toLocaleDateString(locale, { weekday: 'long' }) + \" Workshop \" + localDate.toLocaleDateString(locale, { day: 'numeric', month: 'long', year: 'numeric' });\n\t\tconst event = {\n\t\t\tdate: dateString,\n\t\t\ttitle: titleString\n\t\t};\n\n\t\tconst createdEvent = await eventService.create(event);\n\t\teventId = createdEvent.id;\n\t}\n\n\tsetEventId(eventId);\n\treturn Promise.resolve(eventId);\n}\n\n/// The actual component!\nfunction AttendanceSheet(props) {\n\tconst [eventId, setEventId] = useState(0);\n\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tconst [searchTerm, setSearchTerm] = useState('');\n\n\tconst [filterRecent, setFilterRecent] = useState(false);\n\tconst [filterOld, setFilterOld] = useState(false);\n\tconst [filterNew, setFilterNew] = useState(false);\n\tconst [filterPresent, setFilterPresent] = useState(false);\n\n\tconst [eventRecord, setEventRecord] = useState(null);\n\tconst [users, setUsers] = useState([]);\n\tconst [recents, setRecents] = useState([])\n\tconst [recentUserKeys, setRecentUserKeys] = useState(null);\n\tconst [currentAttendees, setCurrentAttendees] = useState([]);\n\tconst [pending, setPending] = useState([]);\n\n\tconst [modificationPromise, setModificationPromise] = useState(null);\n\n\tlet pendingMap = {};\n\tfor (const pendingAttendee of pending) {\n\t\tconst key = attendeeKey(pendingAttendee);\n\t\tpendingMap[key] = pendingAttendee;\n\t}\n\n\t// Set up configuration\n\tuseEffect(() => {\n\t\tconfigureServices();\n\t});\n\n\t// load the current event id\n\tuseEffect(() => {\n\t\tif (!eventId) {\n\t\t\tloadEventId(setEventId);\n\t\t}\n\t}, [eventId]);\n\n\t// Load initial data.\n\tuseEffect(() => {\n\t\tif (isLoading && eventId) {\n\t\t\tloadAll(eventId, setIsLoading, setEventRecord, setUsers, setRecents, setRecentUserKeys, setCurrentAttendees)\n\t\t}\n\t}, [isLoading, eventId]);\n\n\t// Attendance\n\tconst attendees = possibleAttendees(eventId, users, recents, currentAttendees, pending);\n\n\t// Search\n\tconst searchedAttendees = searchAttendees(attendees, searchTerm);\n\n\t// Filter\n\tconst filteredAttendees = filterAttendees(eventId, searchedAttendees, recentUserKeys, filterRecent, filterOld, filterNew, filterPresent);\n\n\tconst showNewAttendeeForm = !isLoading && (filterNew || filterPresent || !filterRecent);\n\n\t// url for workshop\n\tconst workshopURL = eventId ? \"../../../../wp-admin/admin.php?page=workshop&workshop=\" + eventId: null;\n\treturn (\n\t\t<div className=\"AttendanceSheet\">\n\t\t\t<Header name={eventRecord ? eventRecord.title : ''} url={workshopURL} />\n\t\t\t<SearchBar\n\t\t\t\tsearchTerm={searchTerm} setSearchTerm={setSearchTerm}\n\t\t\t\tfilterRecent={filterRecent} setFilterRecent={setFilterRecent}\n\t\t\t\tfilterOld={filterOld} setFilterOld={setFilterOld}\n\t\t\t\tfilterNew={filterNew} setFilterNew={setFilterNew}\n\t\t\t\tfilterPresent={filterPresent} setFilterPresent={setFilterPresent}\n\t\t\t/>\n\t\t\t<AttendanceList attendees={filteredAttendees} event_id={eventId} pendingMap={pendingMap}\n\t\t\t\taddAttendanceRecord={(attendee) => {\n\t\t\t\t\tsetModificationPromise(addAttendanceRecord(eventId, attendee, modificationPromise, pending, setPending, setCurrentAttendees));\n\t\t\t\t}}\n\t\t\t\tdeleteAttendanceRecord={(attendee) => {\n\t\t\t\t\tsetModificationPromise(deleteAttendanceRecord(eventId, attendee, modificationPromise, pending, setPending, setRecents, setCurrentAttendees));\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<NewAttendeeForm hideAttendeeForm={!showNewAttendeeForm}\n\t\t\t\taddAttendanceRecord={(attendee) => {\n\t\t\t\t\tsetModificationPromise(addAttendanceRecord(eventId, attendee, modificationPromise, pending, setPending, setCurrentAttendees));\n\t\t\t\t}} />\n\t\t\t<Loading isLoading={isLoading} />\n\t\t</div>\n\t)\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport AttendanceSheet from './AttendanceSheet'\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <AttendanceSheet />\n    </div>\n  );\n}\n\n// ========================================\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
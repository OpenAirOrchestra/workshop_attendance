{"version":3,"sources":["Configuration.js","MockAttendanceService.js","EventService.js","UserService.js","Header.js","SearchBar.js","AttendanceRecord.js","AttendanceList.js","NewAttendeeForm.js","Loading.js","AttendanceSheet.js","index.js"],"names":["Configuration","attendanceService","eventService","userService","MockAttendanceService","maxRecordId","pendingRecords","this","attendanceRecords","user_id","firstname","lastname","phone","email","notes","event_id","id","limit","a","records","filter","record","slice","Promise","res","setTimeout","Math","random","resolve","i","items","length","attendanceRecord","newRecord","push","attendee","EventService","page","per_page","date","searchParams","URLSearchParams","offset","getTimezoneOffset","localDate","Date","getTime","dateString","toISOString","substring","set","url","serviceLocation","toString","fetch","response","ok","text","alert","status","statusText","error","json","UserService","Header","props","name","title","className","SearchBar","searchTerm","setSearchTerm","filterRecent","setFilterRecent","filterOld","setFilterOld","filterNew","setFilterNew","filterPresent","setFilterPresent","type","placeholder","value","onChange","event","target","checked","htmlFor","AttendanceRecord","pendingMap","addAttendanceRecord","deleteAttendanceRecord","key","attendeeKey","pending","present","attendanceIcon","attendanceClassName","pendingClassName","attendeeDetails","pendingSpinner","charAt","onClick","AttendanceList","attendees","rows","sort","b","toLowerCase","map","NewAttendeeForm","hideAttendeeForm","useState","setFirstname","setLastname","setEmail","setPhone","setNotes","action","disabled","attAttendanceRecord","handleAdd","Loading","isLoading","AttendanceSheet","eventId","setEventId","setIsLoading","eventRecord","setEventRecord","users","setUsers","recents","setRecents","recentUserKeys","setRecentUserKeys","currentAttendees","setCurrentAttendees","setPending","modificationPromise","setModificationPromise","pendingAttendee","useEffect","configureServices","loadEventId","loadAll","searchedAttendees","pattern","replace","result","Object","values","String","join","includes","searchAttendees","attendanceMap","user","nickname","first_name","last_name","description","recent","currentAttendee","possibleAttendees","filteredAttendees","isRecent","has","filterAttendees","showNewAttendeeForm","get","allUsers","moreUsers","retrieve","Set","add","newPending","newAttendee","create","recordId","delete","paramString","window","location","search","urlParams","events","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad014315.chunk.js","sourcesContent":[" let Configuration = {\n\n    attendanceService : null,\n    eventService : null,\n    userService: null,\n   \n}\n\nexport default Configuration;\n","\n/// Mock restful web service for getting attendance records.\n/// See:  https://dzone.com/articles/consuming-rest-api-with-reactjs\nclass MockAttendanceService {\n\n    maxRecordId = 1000;\n    pendingRecords = [];\n\n    constructor() {\n        this.attendanceRecords = [\n            { user_id: 99, firstname: 'Zaphod', lastname: 'Beeblebrox', phone: '', email: '', notes: 'Presedent of the Galaxy', event_id: 300, id: 199 },\n            { user_id: 100, firstname: 'Alice', lastname: 'Atalan', phone: '', email: '', notes: 'A Tuba', event_id: 1000, id: 200 },\n            { user_id: 101, firstname: 'Bob', lastname: 'Shamilov', phone: '', email: '', notes: 'Bob is a fella', event_id: 1000, id: 201 },\n            { user_id: 102, firstname: 'Charlie', lastname: 'Khalil', phone: '', email: '', notes: 'C Saxophone', event_id: 1000, id: 202 },\n            { user_id: 103, firstname: 'Denise', lastname: 'Usoyan', phone: '', email: '', notes: '', event_id: 1000, id: 203 },\n            { user_id: 104, firstname: 'Ethan', lastname: 'Adi', phone: '', email: '', notes: 'F Flute', event_id: 1000, id: 204 },\n\n            { user_id: 105, firstname: 'Francine', lastname: 'Shavershian', phone: '', email: '', notes: 'C Flute', id: 205 },\n            { user_id: 106, firstname: 'Greg', lastname: 'Mori', phone: '', email: '', notes: 'Clarinet', id: 206 },\n            { user_id: 107, firstname: 'Harry', lastname: 'Tamoyan', phone: '', email: '', notes: 'Bassoon', id: 207 },\n            { user_id: 108, firstname: 'Ichabod', lastname: 'Crane', phone: '', email: '', notes: 'Trombone', id: 208 },\n\n            { user_id: 110, firstname: 'Niel', lastname: 'Armstrong', phone: '', email: '', notes: 'Astronaut', event_id: 10, id: 300 },\n            { user_id: 111, firstname: 'Oprah', lastname: 'Khario', phone: '', email: '', notes: 'Celebrety', event_id: 10, id: 310 },\n            { user_id: 112, firstname: 'Peter', lastname: 'Serdar', phone: '', email: '', notes: 'Dude', event_id: 10, id: 320 },\n            { user_id: 113, firstname: 'Quinn', lastname: 'Evdal', phone: '', email: '', notes: 'Beatles', event_id: 10, id: 330 },\n\n            { firstname: 'Sonny', lastname: 'Bono', phone: '', email: '', notes: 'Celebrity husband', event_id: 1000, id: 340 },\n            { firstname: 'Frank', lastname: 'Zappa', phone: '', email: '', notes: 'Guitar', event_id: 1004, id: 350 }\n\n        ];\n    }\n\n    async retrieve(event_id, limit) {\n        let records = this.attendanceRecords;\n        if (event_id) {\n            records = records.filter(record => record.event_id === event_id);\n        }\n        if (limit) {\n            records = records.slice(0, limit);\n        }\n        await new Promise((res) => setTimeout(res, 1000 * Math.random()));\n        return Promise.resolve(records);\n    }\n\n    async get(id) {\n        for (var i = 0; i < this.items.length; i++) {\n            if (this.attendanceRecords[i].id === id) {\n                return Promise.resolve(this.items[i]);\n            }\n        }\n        return null;\n    }\n\n    async create(attendanceRecord) {\n\n        // Fake delay\n        await new Promise((res) => setTimeout(res, 1000 * Math.random()));\n\n        // Add the new record\n        ++this.maxRecordId;\n        let newRecord = { ...attendanceRecord };\n        newRecord.id = this.maxRecordId;\n        this.attendanceRecords.push(newRecord);\n\n        //Return the promise\n        return Promise.resolve(attendanceRecord);\n    }\n\n    async delete(id) {\n        // Fake delay\n        await new Promise((res) => setTimeout(res, 1000 * Math.random()));\n\n        // Remove the record\n        this.attendanceRecords = this.attendanceRecords.filter(attendee => { return id !== attendee.id; });\n\n        //Return the promise\n        return Promise.resolve(id);\n    }\n}\n\nexport default MockAttendanceService;\n","/// Restful web service for getting attendance records.\n/// See:  https://dzone.com/articles/consuming-rest-api-with-reactjs\n/// See:  https://developer.wordpress.org/rest-api/\nclass EventService {\n\n    /// Get rest api location\n    serviceLocation() {\n        return \"../../../../?rest_route=/workshop_attendance/v1/event\";\n    }\n\n    async retrieve(page, per_page, date) {\n\n        const searchParams = new URLSearchParams( {\n            page: page,\n            per_page: per_page\n        });\n        if (date) {\n            // This code is getting me *tomorrow*!!! at 5:29 PM\n            // DFDF TODO: fix this horribleness!\n            const offset = date.getTimezoneOffset();\n            const localDate = new Date(date.getTime() - (offset * 60 * 1000));\n            const dateString = localDate.toISOString().substring(0,10);\n\n            searchParams.set('search', dateString);\n        }\n        const url = this.serviceLocation() + \"&\" + searchParams.toString();\n\n        const response = await fetch(url);\n\n        if (!response.ok) {\n            const text = await response.text();\n            alert(\"Failed to get workshops Response: \" + response.status + \" \" + response.statusText + \"\\n\" + text);\n\n            return response.error();\n        }\n\n        return response.json();\n    }\n\n    /// Get request (get an event)\n    async get(id) {\n        const url = this.serviceLocation() + \"/\" + id;\n        const response = await fetch(url);\n\n        if (!response.ok) {\n            const text = await response.text();\n            alert(\"Failed to get workshop \" + id + \", Response: \" + response.status + \" \" + response.statusText + \"\\n\" + text);\n\n            return response.error();\n        }\n\n        return response.json();\n    }\n}\n\nexport default EventService;\n","/// webservice for getting users from wordpress.\n/// See: https://dzone.com/articles/consuming-rest-api-with-reactjs\n/// See: https://developer.wordpress.org/rest-api/reference/users/\n\nclass UserService {\n\n    /// Get rest api location\n    serviceLocation() {\n        return \"../../../../?rest_route=/wp/v2/users\";\n    }\n\n    /// Retrieve users.\n    /// page and per_page are needed because of the limits on the wordpress json api.\n    async retrieve(page, per_page) {\n\n        const searchParams = new URLSearchParams( {\n            page: page,\n            per_page: per_page\n        });\n        const url = this.serviceLocation() + \"&\" + searchParams.toString();\n        const response = await fetch(url);\n\n        if (!response.ok) {\n            const text = await response.text();\n            alert( \"Failed to list users, Response: \" + response.status + \" \" + response.statusText + \"\\n\" + text);\n\n            return response.error();\n        }\n        \n        return response.json();\n    }\n}\n\nexport default UserService;\n","import React from 'react';\n\nexport default Header\n\nfunction Header(props) {\n  const name = props.name;\n  const title = name ? 'Attendance for ' + name : 'Loading...'\n\n  return (\n    <div className='Header'>\n      <h1>{title}</h1>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default SearchBar\n\nfunction SearchBar(props) {\n  const searchTerm = props.searchTerm;\n  const setSearchTerm = props.setSearchTerm;\n\n  const filterRecent = props.filterRecent;\n  const setFilterRecent = props.setFilterRecent;\n  const filterOld = props.filterOld;\n  const setFilterOld = props.setFilterOld;\n  const filterNew = props.filterNew;\n  const setFilterNew = props.setFilterNew;\n  const filterPresent = props.filterPresent;\n  const setFilterPresent = props.setFilterPresent;\n\n  return (\n    <div className='SearchBar'>\n      <form>\n        <input type=\"text\" name=\"search\" placeholder=\"&#128269;\" value={searchTerm}\n          onChange={(event) => setSearchTerm(event.target.value)} />\n        <br />\n        <input type=\"checkbox\" name=\"recent\" id=\"recent\" checked={!!filterRecent}\n          onChange={(event) => setFilterRecent(event.target.checked)} />\n        <label htmlFor=\"recent\">recent</label>\n        <input type=\"checkbox\" name=\"old\" id=\"old\" checked={!!filterOld}\n          onChange={(event) => setFilterOld(event.target.checked)} />\n        <label htmlFor=\"old\">rusty</label>\n        <input type=\"checkbox\" name=\"new\" id=\"new\" checked={!!filterNew}\n          onChange={(event) => setFilterNew(event.target.checked)} />\n        <label htmlFor=\"new\">new folks</label>\n        <input type=\"checkbox\" name=\"attendees\" id=\"attendees\" checked={!!filterPresent}\n          onChange={(event) => setFilterPresent(event.target.checked)} />\n        <label htmlFor=\"attendees\">attendees</label>\n      </form>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default AttendanceRecord\n\nexport function attendeeKey(attendee) {\n  const key = attendee.user_id ? attendee.user_id : (attendee.firstname + '.' + attendee.lastname);\n  return key;\n}\n\nfunction AttendanceRecord(props) {\n  const attendee = props.attendee;\n  const pendingMap = props.pendingMap ? props.pendingMap : {};\n  const event_id = props.event_id;\n  const addAttendanceRecord = props.addAttendanceRecord;\n  const deleteAttendanceRecord = props.deleteAttendanceRecord;\n\n  const key = attendeeKey(attendee);\n\n  const pending = pendingMap[key];\n  const present = attendee.event_id && (attendee.event_id === event_id);\n\n  const notes = attendee.notes ? <div> {attendee.notes} </div> : '';\n  const phone = attendee.phone ? <span> {attendee.phone} </span> : '';\n  const email = attendee.email ? <span> {attendee.email} </span> : '';\n\n  const attendanceIcon = present ? '\\u2714' : '\\u274c';\n  const attendanceClassName = present ? 'present' : 'absent';\n  const pendingClassName = pending ? 'pending' : '';\n  const attendeeDetails = <div>\n    {notes}\n    {email}\n    {phone}\n  </div>;\n\n  const pendingSpinner = pending ? (<span className=\"pending-spinner\" />) : '';\n\n  // For not new users, don't show full last name\n  const lastname = (attendee.user_id && attendee.lastname) ? attendee.lastname.charAt(0) : attendee.lastname;\n  return (\n    <tr className={'AttendanceRecord  ' + attendanceClassName + ' ' + pendingClassName}\n      onClick={() => {\n        if (present && !pending) {\n          deleteAttendanceRecord(attendee);\n        } else if (!pending) {\n          addAttendanceRecord(attendee);\n        }\n      }} >\n      <td className='attendee' >\n        {attendee.firstname + ' ' + lastname}\n        <div className=\"details\">\n          {attendeeDetails}\n        </div>\n      </td>\n      <td className='presence' >{pendingSpinner}<span className='presenceIcon'>{attendanceIcon}</span></td>\n    </tr>\n  )\n}\n","import React from 'react';\n\nimport AttendanceRecord, { attendeeKey } from './AttendanceRecord.js'\n\nexport default AttendanceList\n\nfunction AttendanceList(props) {\n  const attendees = props.attendees;\n  const pendingMap = props.pendingMap ? props.pendingMap : {}\n  const event_id = props.event_id;\n\n  const addAttendanceRecord = props.addAttendanceRecord;\n  const deleteAttendanceRecord = props.deleteAttendanceRecord;\n\n  const rows = attendees\n    .sort((a, b) => (a.firstname.toLowerCase() > b.firstname.toLowerCase()) ? 1 : (a.firstname.toLowerCase() === b.firstname.toLowerCase()) ? ((a.lastname.toLowerCase() > b.lastname.toLowerCase()) ? 1 : -1) : -1)\n    .map((attendee) =>\n      <AttendanceRecord attendee={attendee} event_id={event_id} pendingMap={pendingMap} key={attendeeKey(attendee)} \n      addAttendanceRecord={addAttendanceRecord} \n      deleteAttendanceRecord={deleteAttendanceRecord} />\n    );\n  return (\n    <div className='AttendanceList'>\n      <table>\n        <tbody>\n          {rows}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import React, { useState } from 'react';\n\nexport default NewAttendeeForm\n\n/// Handle clicking on the add button\nfunction handleAdd(addAttendanceRecord, firstname, setFirstname, lastname, setLastname, email, setEmail, phone, setPhone, notes, setNotes, attAttendanceRecord) {\n  // Create record\n  const attendee = { firstname: firstname, lastname: lastname, email: email, phone: phone, notes: notes };\n\n  // Add the record\n  addAttendanceRecord(attendee);\n\n  // Clear the form.\n  setFirstname('');\n  setLastname('');\n  setEmail('');\n  setPhone('');\n  setNotes('');\n}\n\nfunction NewAttendeeForm(props) {\n\n  const hideAttendeeForm = props.hideAttendeeForm;\n  const addAttendanceRecord = props.addAttendanceRecord;\n\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [notes, setNotes] = useState('');\n\n  if (hideAttendeeForm) {\n    return null;\n  }\n\n  return (\n    <div className='NewAttendeeForm'>\n      <h2>Add New Attendee</h2>\n      <form action=\"\">\n        <label htmlFor=\"firstname\">First Name (required):</label>\n        <input type=\"text\" name=\"firstname\" id=\"firstname\" className='required' value={firstname} onChange={(event) => setFirstname(event.target.value)} />\n        <br />\n        <label htmlFor=\"lastname\">Last Name (required): </label>\n        <input type=\"text\" name=\"lastname\" id=\"lastname\" className='required' value={lastname} onChange={(event) => setLastname(event.target.value)} />\n        <br />\n        <label htmlFor=\"email\">Email:</label>\n        <input type=\"text\" name=\"email\" id=\"email\" value={email} onChange={(event) => setEmail(event.target.value)} />\n        <br />\n        <label htmlFor=\"phone\">Phone:</label>\n        <input type=\"text\" name=\"phone\" id=\"phone\" value={phone} onChange={(event) => setPhone(event.target.value)} />\n        <br />\n        <label htmlFor=\"notes\">Notes:</label>\n        <br />\n        <textarea name=\"notes\" id=\"notes\" value={notes} onChange={(event) => setNotes(event.target.value)} />\n        <br />\n        <div className='centered'>\n          <input type=\"submit\" value=\"Add\" disabled={!(firstname && lastname)}\n            onClick={() => {\n              handleAdd(addAttendanceRecord, firstname, setFirstname, lastname, setLastname, email, setEmail, phone, setPhone, notes, setNotes);\n            }} />\n        </div>\n      </form>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default Loading\n\nfunction Loading(props) {\n    const isLoading = props.isLoading;\n\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className='Loading'>\n            <div className='inner'>\n                <div className='spinner'></div>\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport Configuration from './Configuration';\nimport MockAttendanceService from './MockAttendanceService';\nimport MockEventService from './MockEventService';\nimport MockUserService from './MockUserService';\nimport EventService from './EventService';\nimport UserService from './UserService';\n\nimport Header from './Header'\nimport SearchBar from './SearchBar'\nimport AttendanceList from './AttendanceList'\nimport { attendeeKey } from './AttendanceRecord';\nimport NewAttendeeForm from './NewAttendeeForm'\nimport Loading from './Loading'\n\nexport default AttendanceSheet\n\n/// Compute attendees from users and attendance records\nfunction possibleAttendees(eventId, users, recents, currentAttendees, pending) {\n\tlet attendanceMap = {}\n\n\t// Add users to the map.\n\tfor (const user of users) {\n\t\tlet attendanceRecord = { user_id: user.id, firstname: '', lastname: '' };\n\t\tif (user.nickname) {\n\t\t\tattendanceRecord.firstname = user.nickname;\n\t\t} else if (user.first_name) {\n\t\t\tattendanceRecord.firstname = user.first_name;\n\t\t\tif (user.last_name) {\n\t\t\t\tattendanceRecord.lastname = user.last_name;\n\t\t\t}\n\t\t} else if (user.name) {\n\t\t\tattendanceRecord.firstname = user.name;\n\t\t}\n\n\t\tif (user.description) {\n\t\t\tattendanceRecord.notes = user.description;\n\t\t}\n\n\t\tattendanceMap[user.id] = attendanceRecord;\n\t}\n\n\t// Add recents to the map\n\tfor (const recent of recents) {\n\t\tif (recent.event_id === eventId) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst key = attendeeKey(recent);\n\t\tlet attendanceRecord = attendanceMap[key];\n\t\tif (!attendanceRecord) {\n\t\t\tattendanceRecord = { ...recent };\n\t\t} else {\n\t\t\tattendanceRecord = { ...attendanceRecord };\n\t\t}\n\n\t\tattendanceRecord.id = recent.id;\n\n\t\tif (!attendanceRecord.notes) {\n\t\t\tattendanceRecord.notes = recent.notes;\n\t\t}\n\t\tattendanceRecord.event_id = recent.event_id;\n\t\tattendanceMap[key] = attendanceRecord;\n\t}\n\n\t// Add currentAttendees to the map\n\tfor (const currentAttendee of currentAttendees) {\n\t\tconst key = attendeeKey(currentAttendee);\n\t\tlet attendanceRecord = attendanceMap[key];\n\t\tif (!attendanceRecord) {\n\t\t\tattendanceRecord = { ...currentAttendee };\n\t\t} else {\n\t\t\tattendanceRecord = { ...attendanceRecord };\n\t\t}\n\n\t\tattendanceRecord.id = currentAttendee.id;\n\t\tattendanceRecord.event_id = currentAttendee.event_id;\n\t\tif (currentAttendee.phone && !attendanceRecord.phone) {\n\t\t\tattendanceRecord.phone = currentAttendee.phone;\n\t\t}\n\t\tif (currentAttendee.user_id && !attendanceRecord.user_id) {\n\t\t\tattendanceRecord.user_id = currentAttendee.user_id;\n\t\t}\n\t\tif (currentAttendee.user_id && !attendanceRecord.user_id) {\n\t\t\tattendanceRecord.user_id = currentAttendee.user_id;\n\t\t}\n\t\tif (currentAttendee.firstname && !attendanceRecord.firstname) {\n\t\t\tattendanceRecord.firstname = currentAttendee.firstname;\n\t\t}\n\t\tif (currentAttendee.lastname && !attendanceRecord.lastname) {\n\t\t\tattendanceRecord.lastname = currentAttendee.lastname;\n\t\t}\n\t\tif (currentAttendee.notes && !attendanceRecord.notes) {\n\t\t\tattendanceRecord.notes = currentAttendee.notes;\n\t\t}\n\n\t\tattendanceMap[key] = attendanceRecord;\n\t}\n\n\t// Add pending to the map\n\tfor (const pendingAttendee of pending) {\n\t\tconst key = attendeeKey(pendingAttendee);\n\t\tlet attendanceRecord = attendanceMap[key];\n\t\tif (!attendanceRecord) {\n\t\t\tattendanceRecord = { ...pendingAttendee };\n\t\t} else {\n\t\t\tattendanceRecord = { ...attendanceRecord };\n\t\t}\n\n\t\tattendanceMap[key] = attendanceRecord;\n\t}\n\n\t// Iterate the map to create result.\n\tconst attendees = Object.values(attendanceMap);\n\treturn attendees ? attendees : [];\n}\n\n/// Return the subset of attendees with text that matches searchTerm\nfunction searchAttendees(attendees, searchTerm) {\n\tconst pattern = searchTerm ? searchTerm.toLowerCase().replace(/\\s+/g, '') : null;\n\tlet result = attendees;\n\n\tif (pattern) {\n\t\tresult = result.filter(attendee => {\n\t\t\tconst line = Object.values(attendee).map(value => {\n\t\t\t\treturn String(value).toLowerCase()\n\t\t\t}).join().replace(/\\s+/g, '');\n\t\t\treturn line.includes(pattern);\n\t\t})\n\t}\n\n\treturn result;\n}\n\n/// Return the subset of attendees that match the filter criteria\nfunction filterAttendees(eventId, attendees, recentUserKeys, filterRecent, filterOld, filterNew, filterPresent) {\n\tlet result = attendees;\n\n\tif (filterRecent || filterNew || filterOld || filterPresent) {\n\t\tresult = result.filter(attendee => {\n\n\t\t\tif (filterNew && !attendee.user_id) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (filterPresent && attendee.event_id && attendee.event_id === eventId) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (filterRecent || filterOld) {\n\t\t\t\tconst key = attendeeKey(attendee);\n\t\t\t\tconst isRecent = recentUserKeys.has(key);\n\n\t\t\t\tif (filterRecent && isRecent) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif (filterOld && !isRecent) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\treturn result;\n}\n\n/// Load all data from backend.\nasync function loadAll(eventId, setIsLoading, setEventRecord, setUsers, setRecents, setRecentUserKeys, setCurrentAttendees) {\n\tconst eventService = Configuration.eventService;\n\tconst userService = Configuration.userService;\n\tconst attendanceService = Configuration.attendanceService;\n\n\tconst eventRecord = await eventService.get(eventId);\n\tsetEventRecord(eventRecord);\n\n\tlet page = 1;\n\tlet allUsers = [];\n\tlet moreUsers = true;\n\tdo {\n\t\tconst users = await userService.retrieve(page, 100);\n\t\tallUsers = [...allUsers, ...users];\n\t\tsetUsers(allUsers);\n\t\tmoreUsers = users.length > 0;\n\t\t++page;\n\t} while (moreUsers);\n\n\tconst recents = await attendanceService.retrieve(null /* event_id */, 256 /* limit */);\n\tsetRecents(recents);\n\n\tlet recentUserKeys = new Set();\n\tfor (const recent of recents) {\n\t\tconst key = attendeeKey(recent);\n\t\trecentUserKeys.add(key);\n\t}\n\tsetRecentUserKeys(recentUserKeys);\n\n\tconst currentAttendees = await attendanceService.retrieve(eventId /* event_id */, 0 /* limit */);\n\tsetCurrentAttendees(currentAttendees);\n\n\tsetIsLoading(false);\n}\n\n/// Add an attendance record (add attendee)\nasync function addAttendanceRecord(eventId, attendee, modificationPromise, pending, setPending, setCurrentAttendees) {\n\tconst attendanceService = Configuration.attendanceService;\n\n\t// Add record to pending\n\tlet newPending = [...pending];\n\tnewPending.push(attendee);\n\tsetPending(newPending);\n\tattendanceService.pendingRecords = newPending;\n\n\t// Create the record to add\n\tlet newAttendee = { ...attendee };\n\tnewAttendee.event_id = eventId;\n\n\t// Ask for the server to create the attendee record\n\tawait attendanceService.create(newAttendee);\n\n\t// Wait for previous modification to complete\n\tawait modificationPromise\n\n\t// List current attendees again and set them\n\tconst currentAttendees = await attendanceService.retrieve(eventId /* event_id */, 0 /* limit */);\n\tsetCurrentAttendees(currentAttendees);\n\n\t// Remove record from pending.\n\t// This could get messed up if we didn't serilize the modification requests.\n\tnewPending = [...attendanceService.pendingRecords].filter(pendingAttendee => {\n\t\treturn pendingAttendee !== attendee;\n\t});\n\tsetPending(newPending);\n\tattendanceService.pendingRecords = newPending;\n\tPromise.resolve(attendee);\n}\n\n/// Add an attendance record (add attendee)\nasync function deleteAttendanceRecord(eventId, attendee, modificationPromise, pending, setPending, setRecents, setCurrentAttendees) {\n\tconst attendanceService = Configuration.attendanceService;\n\n\t// Add record to pending\n\tlet newPending = [...pending];\n\tnewPending.push(attendee);\n\tsetPending(newPending);\n\tattendanceService.pendingRecords = newPending;\n\n\t// Get the id\n\tconst recordId = attendee.id;\n\n\t// Delete the attendance record\n\tawait attendanceService.delete(recordId);\n\n\t// Wait for previous modification to complete\n\tawait modificationPromise\n\n\t// List recent attendees again and set them\n\tconst recents = await attendanceService.retrieve(null /* event_id */, 256 /* limit */);\n\tsetRecents(recents);\n\n\t// List current attendees again and set them\n\tconst currentAttendees = await attendanceService.retrieve(eventId /* event_id */, 0 /* limit */);\n\tsetCurrentAttendees(currentAttendees);\n\n\t// Remove record from pending.\n\t// This could get messed up if we didn't serilize the modification requests.\n\tnewPending = [...attendanceService.pendingRecords].filter(pendingAttendee => {\n\t\treturn pendingAttendee !== attendee;\n\t});\n\tsetPending(newPending);\n\tattendanceService.pendingRecords = newPending;\n\tPromise.resolve(attendee);\n}\n\nfunction configureServices() {\n\tif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n\t\t// Development code\n\t\tif (!Configuration.userService) {\n\t\t\tConfiguration.eventService = new MockEventService();\n\t\t\tConfiguration.userService = new MockUserService();\n\t\t\tConfiguration.attendanceService = new MockAttendanceService();\n\t\t}\n\t} else {\n\t\t// production code\n\t\tif (!Configuration.userService) {\n\t\t\tConfiguration.eventService = new EventService();\n\t\t\tConfiguration.userService = new UserService();\n\t\t\tConfiguration.attendanceService = new MockAttendanceService();\n\t\t}\n\t}\n}\n\nasync function loadEventId(setEventId) {\n\tlet eventId = null;\n\n\tif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n\t\t// dummy event Id\n\t\teventId = 1000;\n\t}\n\n\t// get id from url param \"event_id\"\n\tif (!eventId) {\n\t\tconst paramString = window.location.search;\n\t\tconst urlParams = new URLSearchParams(paramString);\n\t\teventId = urlParams.get('event_id');\n\t}\n\n\t// No event id? try getting today's event.\n\tif (!eventId) {\n\t\tconfigureServices();\n\t\tconst eventService = Configuration.eventService;\n\n\t\t// try to find today's event\n\t\tconst events = await eventService.retrieve(1 /* page */, 100 /* limit */, new Date());\n\n\t\tif (events.length === 1) {\n\t\t\teventId = events[0].id;\n\t\t}\n\t}\n\n\tsetEventId(eventId);\n\treturn Promise.resolve(eventId);\n}\n\n/// The actual component!\nfunction AttendanceSheet(props) {\n\tconst [eventId, setEventId] = useState(0);\n\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tconst [searchTerm, setSearchTerm] = useState('');\n\n\tconst [filterRecent, setFilterRecent] = useState(false);\n\tconst [filterOld, setFilterOld] = useState(false);\n\tconst [filterNew, setFilterNew] = useState(false);\n\tconst [filterPresent, setFilterPresent] = useState(false);\n\n\tconst [eventRecord, setEventRecord] = useState(null);\n\tconst [users, setUsers] = useState([]);\n\tconst [recents, setRecents] = useState([])\n\tconst [recentUserKeys, setRecentUserKeys] = useState(null);\n\tconst [currentAttendees, setCurrentAttendees] = useState([]);\n\tconst [pending, setPending] = useState([]);\n\n\tconst [modificationPromise, setModificationPromise] = useState(null);\n\n\tlet pendingMap = {};\n\tfor (const pendingAttendee of pending) {\n\t\tconst key = attendeeKey(pendingAttendee);\n\t\tpendingMap[key] = pendingAttendee;\n\t}\n\n\t// Set up configuration\n\tuseEffect(() => {\n\t\tconfigureServices();\n\t});\n\n\t// load the current event id\n\tuseEffect(() => {\n\t\tif (!eventId) {\n\t\t\tloadEventId(setEventId);\n\t\t}\n\t}, [eventId]);\n\n\t// Load initial data.\n\tuseEffect(() => {\n\t\tif (isLoading && eventId) {\n\t\t\tloadAll(eventId, setIsLoading, setEventRecord, setUsers, setRecents, setRecentUserKeys, setCurrentAttendees)\n\t\t}\n\t}, [isLoading, eventId]);\n\n\t// Attendance\n\tconst attendees = possibleAttendees(eventId, users, recents, currentAttendees, pending);\n\n\t// Search\n\tconst searchedAttendees = searchAttendees(attendees, searchTerm);\n\n\t// Filter\n\tconst filteredAttendees = filterAttendees(eventId, searchedAttendees, recentUserKeys, filterRecent, filterOld, filterNew, filterPresent);\n\n\tconst showNewAttendeeForm = !isLoading && (filterNew || filterPresent || !filterRecent);\n\n\treturn (\n\t\t<div className=\"AttendanceSheet\">\n\t\t\t<Header name={eventRecord ? eventRecord.title : ''} />\n\t\t\t<SearchBar\n\t\t\t\tsearchTerm={searchTerm} setSearchTerm={setSearchTerm}\n\t\t\t\tfilterRecent={filterRecent} setFilterRecent={setFilterRecent}\n\t\t\t\tfilterOld={filterOld} setFilterOld={setFilterOld}\n\t\t\t\tfilterNew={filterNew} setFilterNew={setFilterNew}\n\t\t\t\tfilterPresent={filterPresent} setFilterPresent={setFilterPresent}\n\t\t\t/>\n\t\t\t<AttendanceList attendees={filteredAttendees} event_id={eventId} pendingMap={pendingMap}\n\t\t\t\taddAttendanceRecord={(attendee) => {\n\t\t\t\t\tsetModificationPromise(addAttendanceRecord(eventId, attendee, modificationPromise, pending, setPending, setCurrentAttendees));\n\t\t\t\t}}\n\t\t\t\tdeleteAttendanceRecord={(attendee) => {\n\t\t\t\t\tsetModificationPromise(deleteAttendanceRecord(eventId, attendee, modificationPromise, pending, setPending, setRecents, setCurrentAttendees));\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<NewAttendeeForm hideAttendeeForm={!showNewAttendeeForm}\n\t\t\t\taddAttendanceRecord={(attendee) => {\n\t\t\t\t\tsetModificationPromise(addAttendanceRecord(eventId, attendee, modificationPromise, pending, setPending, setCurrentAttendees));\n\t\t\t\t}} />\n\t\t\t<Loading isLoading={isLoading} />\n\t\t</div>\n\t)\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport AttendanceSheet from './AttendanceSheet'\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <AttendanceSheet />\n    </div>\n  );\n}\n\n// ========================================\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
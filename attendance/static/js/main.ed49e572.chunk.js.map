{"version":3,"sources":["Configuration.js","MockAttendanceService.js","MockEventService.js","MockUserService.js","Header.js","SearchBar.js","AttendanceRecord.js","AttendanceList.js","NewAttendeeForm.js","Loading.js","AttendanceSheet.js","index.js"],"names":["Configuration","attendanceService","eventService","userService","MockAttendanceService","maxRecordId","pendingRecords","this","attendanceRecords","user_id","firstname","lastname","phone","email","notes","event_id","id","limit","a","records","filter","record","slice","Promise","res","setTimeout","Math","random","resolve","i","items","length","attendanceRecord","newRecord","push","attendee","MockEventService","events","title","date","result","MockUserService","users","name","first_name","last_name","description","nickname","Header","props","className","SearchBar","searchTerm","setSearchTerm","filterRecent","setFilterRecent","filterOld","setFilterOld","filterNew","setFilterNew","filterPresent","setFilterPresent","type","placeholder","value","onChange","event","target","checked","htmlFor","AttendanceRecord","pendingMap","addAttendanceRecord","deleteAttendanceRecord","key","attendeeKey","pending","present","attendanceIcon","attendanceClassName","pendingClassName","attendeeDetails","pendingSpinner","charAt","onClick","AttendanceList","attendees","rows","sort","b","toLowerCase","map","NewAttendeeForm","hideAttendeeForm","useState","setFirstname","setLastname","setEmail","setPhone","setNotes","action","disabled","attAttendanceRecord","handleAdd","Loading","isLoading","AttendanceSheet","setIsLoading","eventRecord","setEventRecord","setUsers","recents","setRecents","currentAttendees","setCurrentAttendees","setPending","modificationPromise","setModificationPromise","pendingAttendee","useEffect","loadAll","filteredAttendees","EVENT_ID","filterAttendees","pattern","replace","Object","values","String","join","includes","searchAttendees","attendanceMap","user","recent","currentAttendee","possibleAttendees","showNewAttendeeForm","get","retrieve","newPending","newAttendee","create","recordId","delete","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed49e572.chunk.js","sourcesContent":[" let Configuration = {\n\n    attendanceService : null,\n    eventService : null,\n    userService: null,\n   \n}\n\nexport default Configuration;\n","\n/// Mock restful web service for getting attendance records.\n/// See:  https://dzone.com/articles/consuming-rest-api-with-reactjs\nclass MockAttendanceService {\n\n    maxRecordId = 1000;\n    pendingRecords = [];\n\n    constructor() {\n        this.attendanceRecords = [\n            { user_id: 99, firstname: 'Zaphod', lastname: 'Beeblebrox', phone: '', email: '', notes: 'Presedent of the Galaxy', event_id: 300, id: 199 },\n            { user_id: 100, firstname: 'Alice', lastname: 'Atalan', phone: '', email: '', notes: 'A Tuba', event_id: 1000, id: 200 },\n            { user_id: 101, firstname: 'Bob', lastname: 'Shamilov', phone: '', email: '', notes: 'Bob is a fella', event_id: 1000, id: 201 },\n            { user_id: 102, firstname: 'Charlie', lastname: 'Khalil', phone: '', email: '', notes: 'C Saxophone', event_id: 1000, id: 202 },\n            { user_id: 103, firstname: 'Denise', lastname: 'Usoyan', phone: '', email: '', notes: '', event_id: 1000, id: 203 },\n            { user_id: 104, firstname: 'Ethan', lastname: 'Adi', phone: '', email: '', notes: 'F Flute', event_id: 1000, id: 204 },\n\n            { user_id: 105, firstname: 'Francine', lastname: 'Shavershian', phone: '', email: '', notes: 'C Flute', id: 205 },\n            { user_id: 106, firstname: 'Greg', lastname: 'Mori', phone: '', email: '', notes: 'Clarinet', id: 206 },\n            { user_id: 107, firstname: 'Harry', lastname: 'Tamoyan', phone: '', email: '', notes: 'Bassoon', id: 207 },\n            { user_id: 108, firstname: 'Ichabod', lastname: 'Crane', phone: '', email: '', notes: 'Trombone', id: 208 },\n\n            { user_id: 110, firstname: 'Niel', lastname: 'Armstrong', phone: '', email: '', notes: 'Astronaut', event_id: 10, id: 300 },\n            { user_id: 111, firstname: 'Oprah', lastname: 'Khario', phone: '', email: '', notes: 'Celebrety', event_id: 10, id: 310 },\n            { user_id: 112, firstname: 'Peter', lastname: 'Serdar', phone: '', email: '', notes: 'Dude', event_id: 10, id: 320 },\n            { user_id: 113, firstname: 'Quinn', lastname: 'Evdal', phone: '', email: '', notes: 'Beatles', event_id: 10, id: 330 },\n\n            { firstname: 'Sonny', lastname: 'Bono', phone: '', email: '', notes: 'Celebrity husband', event_id: 1000, id: 340 },\n            { firstname: 'Frank', lastname: 'Zappa', phone: '', email: '', notes: 'Guitar', event_id: 1004, id: 350 }\n\n        ];\n    }\n\n    async retrieve(event_id, limit) {\n        let records = this.attendanceRecords;\n        if (event_id) {\n            records = records.filter(record => record.event_id === event_id);\n        }\n        if (limit) {\n            records = records.slice(0, limit);\n        }\n        await new Promise((res) => setTimeout(res, 1000 * Math.random()));\n        return Promise.resolve(records);\n    }\n\n    async get(id) {\n        for (var i = 0; i < this.items.length; i++) {\n            if (this.attendanceRecords[i].id === id) {\n                return Promise.resolve(this.items[i]);\n            }\n        }\n        return null;\n    }\n\n    async create(attendanceRecord) {\n\n        // Fake delay\n        await new Promise((res) => setTimeout(res, 1000 * Math.random()));\n\n        // Add the new record\n        ++this.maxRecordId;\n        let newRecord = { ...attendanceRecord };\n        newRecord.id = this.maxRecordId;\n        this.attendanceRecords.push(newRecord);\n\n        //Return the promise\n        return Promise.resolve(attendanceRecord);\n    }\n\n    async delete(id) {\n        // Fake delay\n        await new Promise((res) => setTimeout(res, 1000 * Math.random()));\n\n        // Remove the record\n        this.attendanceRecords = this.attendanceRecords.filter(attendee => { return id !== attendee.id; });\n\n        //Return the promise\n        return Promise.resolve(id);\n    }\n}\n\nexport default MockAttendanceService;\n","/// Mock restful web service for getting attendance records.\n/// See:  https://dzone.com/articles/consuming-rest-api-with-reactjs\nclass MockEventService {\n\n    constructor() {\n        this.events = [\n            { id: 1000, title: 'Workshop for 23 03 2011', date: '23 03 2011' },\n            { id: 205, title: 'Workshop for 23 03 2011', date: '30 03 2011' },\n            { id: 206, title: 'Workshop for 23 03 2011', date: '07 04 2011' },\n            { id: 207, title: 'Workshop for 23 03 2011', date: '14 04 2011' }\n        ];\n    }\n\n    async retrieve() {\n        return Promise.resolve(this.events);\n    }\n\n    async get(id) {\n        let result = null;\n\n        for (var i = 0; i < this.events.length; i++) {\n            if (this.events[i].id === id) {\n                result = this.events[i];\n                break;\n            }\n        }\n        if (result) {\n            // Dummy loading delay\n            await new Promise((res) => setTimeout(res, 1000 * Math.random()));\n            return Promise.resolve(result);\n        }\n        \n        return null;\n    }\n}\n\nexport default MockEventService;\n","/// Mock webservice for getting users from wordpress.\n/// See: https://dzone.com/articles/consuming-rest-api-with-reactjs\n/// See: https://developer.wordpress.org/rest-api/reference/users/\n\nclass MockUserService {\n\n    constructor() {\n        this.users = [{\n            id: 99,\n            name: 'Zaphod',\n            first_name: 'Zaphond',\n            last_name: 'Beeblebrox',\n            email: 'zaphod@example.com',\n            description: 'Presedent of the Galaxy',\n            nickname: 'Zaphod Dude'\n        },\n        {\n            id: 1099,\n            name: 'FordP',\n            first_name: 'Ford',\n            last_name: 'Prefect',\n            email: 'ford@example.com',\n            description: 'Alien',\n            nickname: 'Fnord'\n        },\n        {\n            id: 1100,\n            name: 'AurthorD',\n            first_name: 'Arthor',\n            last_name: 'Dent',\n            email: 'arthor@example.com',\n            description: 'Sad Earthline',\n            nickname: 'DentArthorDent'\n        },\n        {\n            id: 1101,\n            name: 'MarvinA',\n            first_name: 'Marvin',\n            last_name: 'Android',\n            email: 'marvin@example.com',\n            description: 'Marvin the paranoid android',\n            nickname: 'SadMarvin'\n        },\n        { id: 100, first_name: 'Alice', last_name: 'Atalan', description: 'A Tuba' },\n        { id: 101, first_name: 'Bob', last_name: 'Shamilov', description: 'Bob is a fella' },\n        { id: 102, first_name: 'Charlie', last_name: 'Suloev', description: 'C Saxophone' },\n        { id: 103, first_name: 'Denise', last_name: 'Khalil' },\n        { id: 104, first_name: 'Ethan', last_name: 'Usoyan', },\n\n        { id: 2104, first_name: 'Alexis', last_name: 'Adi', description: 'Trumpet'},\n        { id: 2105, first_name: 'Aline', last_name: 'Shavershian', description: 'Percussion'},\n        { id: 2106, first_name: 'Arturo', last_name: 'Mori', description: 'Percussion, Sax, Video, Photo.'},\n        { id: 2107, first_name: 'Alma', last_name: 'Tamoyan', description: 'We are music because we all are energy flowing.'},\n        { id: 2108, first_name: 'Andrew', last_name: 'Ilyas', description: 'Talented, industrious, unsuccessful musician.'},\n        { id: 2109, first_name: 'Brandon', last_name: 'Khario', description: 'Cornet'},\n        { id: 2110, first_name: 'Brian', last_name: 'Serdar', description: 'Everything I Can'},\n        { id: 2111, first_name: 'Clair', last_name: 'Evdal', description: 'Sousaphone, Trombone'},\n        { id: 2112, first_name: 'Fred', last_name: 'Boyik', description: 'Multi-instrumentalist. I have played with The Carnival Band for over 10 years. Previously played with numerous Vancouver Bands.'},\n        { id: 2113, first_name: 'Hayley', last_name: 'Mirza', description: 'Percussion.'},\n        { id: 2114, first_name: 'Helen', last_name: 'Khalif', description: 'Knitter Potter Tuber.'},\n        { id: 2115, first_name: 'Henry', last_name: 'Adzhoyev', description: 'Dancer'},\n        { id: 2116, first_name: 'James', last_name: 'Shero', description: 'It is not the size that counts, it is how you blow it.'},\n        { id: 2117, first_name: 'Max', last_name: 'Hajoyan', description: 'Trombone'}\n\n        ];\n    }\n\n    async retrieve() {\n        await new Promise((res) => setTimeout(res, 1000 * Math.random()));\n        return Promise.resolve(this.users);\n    }\n}\n\nexport default MockUserService;\n","import React from 'react';\n\nexport default Header\n\nfunction Header(props) {\n  const name = props.name;\n  const title = name ? 'Attendance for ' + name : 'Loading...'\n\n  return (\n    <div className='Header'>\n      <h1>{title}</h1>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default SearchBar\n\nfunction SearchBar(props) {\n  const searchTerm = props.searchTerm;\n  const setSearchTerm = props.setSearchTerm;\n\n  const filterRecent = props.filterRecent;\n  const setFilterRecent = props.setFilterRecent;\n  const filterOld = props.filterOld;\n  const setFilterOld = props.setFilterOld;\n  const filterNew = props.filterNew;\n  const setFilterNew = props.setFilterNew;\n  const filterPresent = props.filterPresent;\n  const setFilterPresent = props.setFilterPresent;\n\n  return (\n    <div className='SearchBar'>\n      <form>\n        <input type=\"text\" name=\"search\" placeholder=\"&#128269;\" value={searchTerm}\n          onChange={(event) => setSearchTerm(event.target.value)} />\n        <br />\n        <input type=\"checkbox\" name=\"recent\" id=\"recent\" checked={!!filterRecent}\n          onChange={(event) => setFilterRecent(event.target.checked)} />\n        <label htmlFor=\"recent\">recent</label>\n        <input type=\"checkbox\" name=\"old\" id=\"old\" checked={!!filterOld}\n          onChange={(event) => setFilterOld(event.target.checked)} />\n        <label htmlFor=\"old\">rusty</label>\n        <input type=\"checkbox\" name=\"new\" id=\"new\" checked={!!filterNew}\n          onChange={(event) => setFilterNew(event.target.checked)} />\n        <label htmlFor=\"new\">new folks</label>\n        <input type=\"checkbox\" name=\"attendees\" id=\"attendees\" checked={!!filterPresent}\n          onChange={(event) => setFilterPresent(event.target.checked)} />\n        <label htmlFor=\"attendees\">attendees</label>\n      </form>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default AttendanceRecord\n\nexport function attendeeKey(attendee) {\n  const key = attendee.user_id ? attendee.user_id : (attendee.firstname + '.' + attendee.lastname);\n  return key;\n}\n\nfunction AttendanceRecord(props) {\n  const attendee = props.attendee;\n  const pendingMap = props.pendingMap ? props.pendingMap : {};\n  const event_id = props.event_id;\n  const addAttendanceRecord = props.addAttendanceRecord;\n  const deleteAttendanceRecord = props.deleteAttendanceRecord;\n\n  const key = attendeeKey(attendee);\n\n  const pending = pendingMap[key];\n  const present = attendee.event_id && (attendee.event_id === event_id);\n\n  const notes = attendee.notes ? <div> {attendee.notes} </div> : '';\n  const phone = attendee.phone ? <span> {attendee.phone} </span> : '';\n  const email = attendee.email ? <span> {attendee.email} </span> : '';\n\n  const attendanceIcon = present ? '\\u2714' : '\\u274c';\n  const attendanceClassName = present ? 'present' : 'absent';\n  const pendingClassName = pending ? 'pending' : '';\n  const attendeeDetails = <div>\n    {notes}\n    {email}\n    {phone}\n  </div>;\n\n  const pendingSpinner = pending ? (<span className=\"pending-spinner\" />) : '';\n\n  // For not new users, don't show full last name\n  const lastname = (attendee.user_id && attendee.lastname) ? attendee.lastname.charAt(0) : attendee.lastname;\n  return (\n    <tr className={'AttendanceRecord  ' + attendanceClassName + ' ' + pendingClassName}\n      onClick={() => {\n        if (present && !pending) {\n          deleteAttendanceRecord(attendee);\n        } else if (!pending) {\n          addAttendanceRecord(attendee);\n        }\n      }} >\n      <td className='attendee' >\n        {attendee.firstname + ' ' + lastname}\n        <div className=\"details\">\n          {attendeeDetails}\n        </div>\n      </td>\n      <td className='presence' >{pendingSpinner}<span className='presenceIcon'>{attendanceIcon}</span></td>\n    </tr>\n  )\n}\n","import React from 'react';\n\nimport AttendanceRecord, { attendeeKey } from './AttendanceRecord.js'\n\nexport default AttendanceList\n\nfunction AttendanceList(props) {\n  const attendees = props.attendees;\n  const pendingMap = props.pendingMap ? props.pendingMap : {}\n  const event_id = props.event_id;\n\n  const addAttendanceRecord = props.addAttendanceRecord;\n  const deleteAttendanceRecord = props.deleteAttendanceRecord;\n\n  const rows = attendees\n    .sort((a, b) => (a.firstname.toLowerCase() > b.firstname.toLowerCase()) ? 1 : (a.firstname.toLowerCase() === b.firstname.toLowerCase()) ? ((a.lastname.toLowerCase() > b.lastname.toLowerCase()) ? 1 : -1) : -1)\n    .map((attendee) =>\n      <AttendanceRecord attendee={attendee} event_id={event_id} pendingMap={pendingMap} key={attendeeKey(attendee)} \n      addAttendanceRecord={addAttendanceRecord} \n      deleteAttendanceRecord={deleteAttendanceRecord} />\n    );\n  return (\n    <div className='AttendanceList'>\n      <table>\n        <tbody>\n          {rows}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import React, { useState } from 'react';\n\nexport default NewAttendeeForm\n\n/// Handle clicking on the add button\nfunction handleAdd(addAttendanceRecord, firstname, setFirstname, lastname, setLastname, email, setEmail, phone, setPhone, notes, setNotes, attAttendanceRecord) {\n  // Create record\n  const attendee = { firstname: firstname, lastname: lastname, email: email, phone: phone, notes: notes };\n\n  // Add the record\n  addAttendanceRecord(attendee);\n\n  // Clear the form.\n  setFirstname('');\n  setLastname('');\n  setEmail('');\n  setPhone('');\n  setNotes('');\n}\n\nfunction NewAttendeeForm(props) {\n\n  const hideAttendeeForm = props.hideAttendeeForm;\n  const addAttendanceRecord = props.addAttendanceRecord;\n\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [notes, setNotes] = useState('');\n\n  if (hideAttendeeForm) {\n    return null;\n  }\n\n  return (\n    <div className='NewAttendeeForm'>\n      <h2>Add New Attendee</h2>\n      <form action=\"\">\n        <label htmlFor=\"firstname\">First Name (required):</label>\n        <input type=\"text\" name=\"firstname\" id=\"firstname\" className='required' value={firstname} onChange={(event) => setFirstname(event.target.value)} />\n        <br />\n        <label htmlFor=\"lastname\">Last Name (required): </label>\n        <input type=\"text\" name=\"lastname\" id=\"lastname\" className='required' value={lastname} onChange={(event) => setLastname(event.target.value)} />\n        <br />\n        <label htmlFor=\"email\">Email:</label>\n        <input type=\"text\" name=\"email\" id=\"email\" value={email} onChange={(event) => setEmail(event.target.value)} />\n        <br />\n        <label htmlFor=\"phone\">Phone:</label>\n        <input type=\"text\" name=\"phone\" id=\"phone\" value={phone} onChange={(event) => setPhone(event.target.value)} />\n        <br />\n        <label htmlFor=\"notes\">Notes:</label>\n        <br />\n        <textarea name=\"notes\" id=\"notes\" value={notes} onChange={(event) => setNotes(event.target.value)} />\n        <br />\n        <div className='centered'>\n          <input type=\"submit\" value=\"Add\" disabled={!(firstname && lastname)}\n            onClick={() => {\n              handleAdd(addAttendanceRecord, firstname, setFirstname, lastname, setLastname, email, setEmail, phone, setPhone, notes, setNotes);\n            }} />\n        </div>\n      </form>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default Loading\n\nfunction Loading(props) {\n    const isLoading = props.isLoading;\n\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className='Loading'>\n            <div className='inner'>\n                <div className='spinner'></div>\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport Configuration from './Configuration';\nimport MockAttendanceService from './MockAttendanceService';\nimport MockEventService from './MockEventService';\nimport MockUserService from './MockUserService';\nimport Header from './Header'\nimport SearchBar from './SearchBar'\nimport AttendanceList from './AttendanceList'\nimport { attendeeKey } from './AttendanceRecord';\nimport NewAttendeeForm from './NewAttendeeForm'\nimport Loading from './Loading'\n\nexport default AttendanceSheet\n\n/// Compute attendees from users and attendance records\nfunction possibleAttendees(users, recents, currentAttendees, pending) {\n\tlet attendanceMap = {}\n\n\t// Add users to the map.\n\tfor (const user of users) {\n\t\tlet attendanceRecord = { user_id: user.id, firstname: '', lastname: '' };\n\t\tif (user.nickname) {\n\t\t\tattendanceRecord.firstname = user.nickname;\n\t\t} else if (user.first_name) {\n\t\t\tattendanceRecord.firstname = user.first_name;\n\t\t\tif (user.last_name) {\n\t\t\t\tattendanceRecord.lastname = user.last_name;\n\t\t\t}\n\t\t}\n\n\t\tif (user.description) {\n\t\t\tattendanceRecord.notes = user.description;\n\t\t}\n\n\t\tattendanceMap[user.id] = attendanceRecord;\n\t}\n\n\t// Add recents to the map\n\tfor (const recent of recents) {\n\t\tconst key = attendeeKey(recent);\n\t\tlet attendanceRecord = attendanceMap[key];\n\t\tif (!attendanceRecord) {\n\t\t\tattendanceRecord = { ...recent };\n\t\t} else {\n\t\t\tattendanceRecord = { ...attendanceRecord };\n\t\t}\n\n\t\tattendanceRecord.id = recent.id;\n\n\t\tif (!attendanceRecord.notes) {\n\t\t\tattendanceRecord.notes = recent.notes;\n\t\t}\n\t\tattendanceRecord.event_id = recent.event_id;\n\t\tattendanceMap[key] = attendanceRecord;\n\t}\n\n\t// Add currentAttendees to the map\n\tfor (const currentAttendee of currentAttendees) {\n\t\tconst key = attendeeKey(currentAttendee);\n\t\tlet attendanceRecord = attendanceMap[key];\n\t\tif (!attendanceRecord) {\n\t\t\tattendanceRecord = { ...currentAttendee };\n\t\t} else {\n\t\t\tattendanceRecord = { ...attendanceRecord };\n\t\t}\n\n\t\tattendanceRecord.id = currentAttendee.id;\n\t\tattendanceRecord.event_id = currentAttendee.event_id;\n\t\tif (currentAttendee.phone && !attendanceRecord.phone) {\n\t\t\tattendanceRecord.phone = currentAttendee.phone;\n\t\t}\n\t\tif (currentAttendee.user_id && !attendanceRecord.user_id) {\n\t\t\tattendanceRecord.user_id = currentAttendee.user_id;\n\t\t}\n\t\tif (currentAttendee.user_id && !attendanceRecord.user_id) {\n\t\t\tattendanceRecord.user_id = currentAttendee.user_id;\n\t\t}\n\t\tif (currentAttendee.firstname && !attendanceRecord.firstname) {\n\t\t\tattendanceRecord.firstname = currentAttendee.firstname;\n\t\t}\n\t\tif (currentAttendee.lastname && !attendanceRecord.lastname) {\n\t\t\tattendanceRecord.lastname = currentAttendee.lastname;\n\t\t}\n\t\tif (currentAttendee.notes && !attendanceRecord.notes) {\n\t\t\tattendanceRecord.notes = currentAttendee.notes;\n\t\t}\n\n\t\tattendanceMap[key] = attendanceRecord;\n\t}\n\n\t// Add pending to the map\n\tfor (const pendingAttendee of pending) {\n\t\tconst key = attendeeKey(pendingAttendee);\n\t\tlet attendanceRecord = attendanceMap[key];\n\t\tif (!attendanceRecord) {\n\t\t\tattendanceRecord = { ...pendingAttendee };\n\t\t} else {\n\t\t\tattendanceRecord = { ...attendanceRecord };\n\t\t}\n\n\t\tattendanceMap[key] = attendanceRecord;\n\t}\n\n\t// Iterate the map to create result.\n\tconst attendees = Object.values(attendanceMap);\n\treturn attendees ? attendees : [];\n}\n\n/// Return the subset of attendees with text that matches searchTerm\nfunction searchAttendees(attendees, searchTerm) {\n\tconst pattern = searchTerm ? searchTerm.toLowerCase().replace(/\\s+/g, '') : null;\n\tlet result = attendees;\n\n\tif (pattern) {\n\t\tresult = result.filter(attendee => {\n\t\t\tconst line = Object.values(attendee).map(value => {\n\t\t\t\treturn String(value).toLowerCase()\n\t\t\t}).join().replace(/\\s+/g, '');\n\t\t\treturn line.includes(pattern);\n\t\t})\n\t}\n\n\treturn result;\n}\n\n/// Return the subset of attendees that match the filter criteria\nfunction filterAttendees(attendees, filterRecent, filterOld, filterNew, filterPresent) {\n\tlet result = attendees;\n\n\tif (filterRecent || filterNew || filterOld || filterPresent) {\n\t\tresult = result.filter(attendee => {\n\t\t\tif (filterRecent && attendee.event_id) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (filterOld && !attendee.event_id) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (filterNew && !attendee.user_id) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (filterPresent && attendee.event_id && attendee.event_id === EVENT_ID) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\treturn result;\n}\n\n/// Load all data from backend.\nasync function loadAll(setIsLoading, setEventRecord, setUsers, setRecents, setCurrentAttendees) {\n\tconst eventService = Configuration.eventService;\n\tconst userService = Configuration.userService;\n\tconst attendanceService = Configuration.attendanceService;\n\n\tconst eventRecord = await eventService.get(EVENT_ID);\n\tsetEventRecord(eventRecord);\n\n\tconst users = await userService.retrieve();\n\tsetUsers(users);\n\n\tconst recents = await attendanceService.retrieve(null /* event_id */, 256 /* limit */);\n\tsetRecents(recents);\n\n\tconst currentAttendees = await attendanceService.retrieve(EVENT_ID /* event_id */, 0 /* limit */);\n\tsetCurrentAttendees(currentAttendees);\n\n\tsetIsLoading(false);\n}\n\n/// Add an attendance record (add attendee)\nasync function addAttendanceRecord(attendee, modificationPromise, pending, setPending, setCurrentAttendees) {\n\tconst attendanceService = Configuration.attendanceService;\n\n\t// Add record to pending\n\tlet newPending = [...pending];\n\tnewPending.push(attendee);\n\tsetPending(newPending);\n\tattendanceService.pendingRecords = newPending;\n\n\t// Create the record to add\n\tlet newAttendee = { ...attendee };\n\tnewAttendee.event_id = EVENT_ID;\n\n\t// Ask for the server to create the attendee record\n\tawait attendanceService.create(newAttendee);\n\n\t// Wait for previous modification to complete\n\tawait modificationPromise\n\n\t// List current attendees again and set them\n\tconst currentAttendees = await attendanceService.retrieve(EVENT_ID /* event_id */, 0 /* limit */);\n\tsetCurrentAttendees(currentAttendees);\n\n\t// Remove record from pending.\n\t// This could get messed up if we didn't serilize the modification requests.\n\tnewPending = [...attendanceService.pendingRecords].filter(pendingAttendee => {\n\t\treturn pendingAttendee !== attendee;\n\t});\n\tsetPending(newPending);\n\tattendanceService.pendingRecords = newPending;\n\tPromise.resolve(attendee);\n}\n\n/// Add an attendance record (add attendee)\nasync function deleteAttendanceRecord(attendee, modificationPromise, pending, setPending, setRecents, setCurrentAttendees) {\n\tconst attendanceService = Configuration.attendanceService;\n\n\t// Add record to pending\n\tlet newPending = [...pending];\n\tnewPending.push(attendee);\n\tsetPending(newPending);\n\tattendanceService.pendingRecords = newPending;\n\n\t// Get the id\n\tconst recordId = attendee.id;\n\n\t// Delete the attendance record\n\tawait attendanceService.delete(recordId);\n\n\t// Wait for previous modification to complete\n\tawait modificationPromise\n\n\t// List recent attendees again and set them\n\tconst recents = await attendanceService.retrieve(null /* event_id */, 256 /* limit */);\n\tsetRecents(recents);\n\n\t// List current attendees again and set them\n\tconst currentAttendees = await attendanceService.retrieve(EVENT_ID /* event_id */, 0 /* limit */);\n\tsetCurrentAttendees(currentAttendees);\n\n\t// Remove record from pending.\n\t// This could get messed up if we didn't serilize the modification requests.\n\tnewPending = [...attendanceService.pendingRecords].filter(pendingAttendee => {\n\t\treturn pendingAttendee !== attendee;\n\t});\n\tsetPending(newPending);\n\tattendanceService.pendingRecords = newPending;\n\tPromise.resolve(attendee);\n}\n\n/// The actual component!\nfunction AttendanceSheet(props) {\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tconst [searchTerm, setSearchTerm] = useState('');\n\n\tconst [filterRecent, setFilterRecent] = useState(false);\n\tconst [filterOld, setFilterOld] = useState(false);\n\tconst [filterNew, setFilterNew] = useState(false);\n\tconst [filterPresent, setFilterPresent] = useState(false);\n\n\tconst [eventRecord, setEventRecord] = useState(null);\n\tconst [users, setUsers] = useState([]);\n\tconst [recents, setRecents] = useState([])\n\tconst [currentAttendees, setCurrentAttendees] = useState([]);\n\tconst [pending, setPending] = useState([]);\n\n\tconst [modificationPromise, setModificationPromise] = useState(null);\n\n\tlet pendingMap = {};\n\tfor (const pendingAttendee of pending) {\n\t\tconst key = attendeeKey(pendingAttendee);\n\t\tpendingMap[key] = pendingAttendee;\n\t}\n\n\t// Set up configuration\n\tuseEffect(() => {\n\t\tif (!Configuration.eventService) {\n\t\t\tConfiguration.eventService = new MockEventService();\n\t\t\tConfiguration.userService = new MockUserService();\n\t\t\tConfiguration.attendanceService = new MockAttendanceService();\n\t\t}\n\t});\n\n\n\t// Load initial data.\n\tuseEffect(() => {\n\t\tif (isLoading) {\n\t\t\tloadAll(setIsLoading, setEventRecord, setUsers, setRecents, setCurrentAttendees)\n\t\t}\n\t}, [isLoading]);\n\n\t// Attendance\n\tconst attendees = possibleAttendees(users, recents, currentAttendees, pending);\n\n\t// Search\n\tconst searchedAttendees = searchAttendees(attendees, searchTerm);\n\n\t// Filter\n\tconst filteredAttendees = filterAttendees(searchedAttendees, filterRecent, filterOld, filterNew, filterPresent);\n\n\tconst showNewAttendeeForm = !isLoading && (filterNew || filterPresent || !filterRecent);\n\n\treturn (\n\t\t<div className=\"AttendanceSheet\">\n\t\t\t<Header name={eventRecord ? eventRecord.title : ''} />\n\t\t\t<SearchBar\n\t\t\t\tsearchTerm={searchTerm} setSearchTerm={setSearchTerm}\n\t\t\t\tfilterRecent={filterRecent} setFilterRecent={setFilterRecent}\n\t\t\t\tfilterOld={filterOld} setFilterOld={setFilterOld}\n\t\t\t\tfilterNew={filterNew} setFilterNew={setFilterNew}\n\t\t\t\tfilterPresent={filterPresent} setFilterPresent={setFilterPresent}\n\t\t\t/>\n\t\t\t<AttendanceList attendees={filteredAttendees} event_id={EVENT_ID} pendingMap={pendingMap}\n\t\t\t\taddAttendanceRecord={(attendee) => {\n\t\t\t\t\tsetModificationPromise(addAttendanceRecord(attendee, modificationPromise, pending, setPending, setCurrentAttendees));\n\t\t\t\t}}\n\t\t\t\tdeleteAttendanceRecord={(attendee) => {\n\t\t\t\t\tsetModificationPromise(deleteAttendanceRecord(attendee, modificationPromise, pending, setPending, setRecents, setCurrentAttendees));\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<NewAttendeeForm hideAttendeeForm={!showNewAttendeeForm}\n\t\t\t\taddAttendanceRecord={(attendee) => {\n\t\t\t\t\tsetModificationPromise(addAttendanceRecord(attendee, modificationPromise, pending, setPending, setCurrentAttendees));\n\t\t\t\t}} />\n\t\t\t<Loading isLoading={isLoading} />\n\t\t</div>\n\t)\n}\n\n// Dummy data\nconst EVENT_ID = 1000;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport AttendanceSheet from './AttendanceSheet'\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <AttendanceSheet />\n    </div>\n  );\n}\n\n// ========================================\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}